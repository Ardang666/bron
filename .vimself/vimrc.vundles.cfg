" [YCM]
let g:ycm_server_python_interpreter='/usr/bin/python'
let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'

" [universal-ctags]
" set tags=tags;
" set autochdir

" [tagbar]
nmap <Leader>tb :TagbarToggle<CR>
let g:tagbar_width = 30
" 开启自动预览(随着光标在标签上的移动，顶部会出现一个实时的预览窗口)
" let g:tagbar_autopreview = 1
" 关闭排序,即按标签本身在文件中的位置排序
let g:tagbar_sort = 0
" 设置ctags所在路径
let g:tagbar_ctags_bin='/usr/bin/ctags' 
" 在执行的文件下，自动打开tagbar
autocmd BufReadPost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar#autoopen()　

" [easymotion]

" [superTab]
let g:SuperTabRetainCompletionType=2

" [NERDTREE]
" https://linux.cn/article-7424-1.html
" 显示行号
let NERDTreeShowLineNumbers=1
let NERDTreeAutoCenter=1
" 是否显示隐藏文件
let NERDTreeShowHidden=1
" 设置宽度
let NERDTreeWinSize=31
" 在终端启动vim时，共享NERDTree
" let g:nerdtree_tabs_open_on_console_startup=1
" 忽略一下文件的显示
let NERDTreeIgnore=['\.pyc','\~$','\.swp']
" 显示书签列表
let NERDTreeShowBookmarks=1
let g:NERDTreeIndicatorMapCustom = {
        \ "Modified"  : "✹",
        \ "Staged"    : "✚",
        \ "Untracked" : "✭",
        \ "Renamed"   : "➜",
        \ "Unmerged"  : "═",
        \ "Deleted"   : "✖",
        \ "Dirty"     : "✗",
        \ "Clean"     : "✔︎",
        \ "Unknown"   : "?"
	      \}

" [airline]
let g:airline_theme="molokai"

" 这个是安装字体后 必须设置此项" 
let g:airline_powerline_fonts = 1   
 
" 打开tabline功能,方便查看Buffer和切换，这个功能比较不错"
" 我还省去了minibufexpl插件，因为我习惯在1个Tab下用多个buffer"
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1

" 关闭状态显示空白符号计数,这个对我用处不大"
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#whitespace#symbol = '!'

" [cscope]
if has("cscope")
  set csprg=/usr/bin/cscope
  set csto=1
  set cst
  set nocsverb
  " add any database in current directory
  if filereadable("cscope.out")
    cs add cscope.out
  endif
  set csverb
endif

" [multipleCursor]
"let g:multi_cursor_use_default_mapping=0

" Default mapping
""let g:multi_cursor_start_word_key      = '<C-n>'
""let g:multi_cursor_select_all_word_key = '<A-n>'
""let g:multi_cursor_start_key           = 'g<C-n>'
""let g:multi_cursor_select_all_key      = 'g<A-n>'
""let g:multi_cursor_next_key            = '<C-n>'
""let g:multi_cursor_prev_key            = '<C-p>'
""let g:multi_cursor_skip_key            = '<C-x>'
""let g:multi_cursor_quit_key            = '<Esc>'


